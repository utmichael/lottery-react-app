{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micka\\\\Desktop\\\\Crypto Project\\\\lottery-react-app\\\\src\\\\App.js\";\nimport './App.css';\nimport Web3 from 'web3';\nimport { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar web3 = new Web3(Web3.givenProvider || \"ws://localhost:7545\");\nlet lotteryAddress = '0x69bF039ED3c1Be51a491B77855245735faa7C365';\nlet lotteryABI = [{\n  \"inputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"index\",\n    \"type\": \"uint256\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"address\",\n    \"name\": \"bettor\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"bytes1\",\n    \"name\": \"challenges\",\n    \"type\": \"bytes1\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"answerBlockNumber\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"BET\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"index\",\n    \"type\": \"uint256\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"address\",\n    \"name\": \"bettor\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"bytes1\",\n    \"name\": \"challenges\",\n    \"type\": \"bytes1\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"bytes1\",\n    \"name\": \"answer\",\n    \"type\": \"bytes1\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"answerBlockNumber\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"DRAW\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"index\",\n    \"type\": \"uint256\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"address\",\n    \"name\": \"bettor\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"bytes1\",\n    \"name\": \"challenges\",\n    \"type\": \"bytes1\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"bytes1\",\n    \"name\": \"answer\",\n    \"type\": \"bytes1\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"answerBlockNumber\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"FAIL\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"index\",\n    \"type\": \"uint256\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"address\",\n    \"name\": \"bettor\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"bytes1\",\n    \"name\": \"challenges\",\n    \"type\": \"bytes1\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"answerBlockNumber\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"REFUND\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"index\",\n    \"type\": \"uint256\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"address\",\n    \"name\": \"bettor\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"bytes1\",\n    \"name\": \"challenges\",\n    \"type\": \"bytes1\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"bytes1\",\n    \"name\": \"answer\",\n    \"type\": \"bytes1\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"answerBlockNumber\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"WIN\",\n  \"type\": \"event\"\n}, {\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"answerForTest\",\n  \"outputs\": [{\n    \"internalType\": \"bytes32\",\n    \"name\": \"\",\n    \"type\": \"bytes32\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"owner\",\n  \"outputs\": [{\n    \"internalType\": \"address payable\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"constant\": false,\n  \"inputs\": [{\n    \"internalType\": \"bytes1\",\n    \"name\": \"challenges\",\n    \"type\": \"bytes1\"\n  }],\n  \"name\": \"betAndDistribute\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"result\",\n    \"type\": \"bool\"\n  }],\n  \"payable\": true,\n  \"stateMutability\": \"payable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"getPot\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"pot\",\n    \"type\": \"uint256\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"constant\": false,\n  \"inputs\": [{\n    \"internalType\": \"bytes1\",\n    \"name\": \"challenges\",\n    \"type\": \"bytes1\"\n  }],\n  \"name\": \"bet\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"result\",\n    \"type\": \"bool\"\n  }],\n  \"payable\": true,\n  \"stateMutability\": \"payable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": false,\n  \"inputs\": [],\n  \"name\": \"distribute\",\n  \"outputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": false,\n  \"inputs\": [{\n    \"internalType\": \"bytes32\",\n    \"name\": \"answer\",\n    \"type\": \"bytes32\"\n  }],\n  \"name\": \"setAnswerForTest\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"result\",\n    \"type\": \"bool\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [{\n    \"internalType\": \"bytes1\",\n    \"name\": \"challenges\",\n    \"type\": \"bytes1\"\n  }, {\n    \"internalType\": \"bytes32\",\n    \"name\": \"answer\",\n    \"type\": \"bytes32\"\n  }],\n  \"name\": \"isMatch\",\n  \"outputs\": [{\n    \"internalType\": \"enum Lottery.BettingResult\",\n    \"name\": \"\",\n    \"type\": \"uint8\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"pure\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"index\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"getBetInfo\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"answerBlockNumber\",\n    \"type\": \"uint256\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"bettor\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"bytes1\",\n    \"name\": \"challenges\",\n    \"type\": \"bytes1\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.pollData = async () => {\n      await this.getPot();\n      await this.getBetEvents();\n    };\n\n    this.initWeb3 = async () => {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n\n        try {\n          // Request account access if needed\n          await window.ethereum.enable(); // Acccounts now exposed\n          // this.web3.eth.sendTransaction({/* ... */});\n        } catch (error) {\n          // User denied account access...\n          console.log(`User denied account access: ${error}`);\n        }\n      } // Legacy dapp browsers...\n      else if (window.web3) {\n        console.log('Legacy Mode');\n        window.web3 = new Web3(Web3.currentProvider); // Acccounts always exposed\n        // this.web3.eth.sendTransaction({/* ... */});\n      } // Non-dapp browsers...\n      else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n      }\n\n      let accounts = await web3.eth.getAccounts();\n      this.account = accounts[0];\n      console.log(this.account);\n      this.lotteryContract = new web3.eth.Contract(lotteryABI, lotteryAddress);\n      let owner = await this.lotteryContract.methods.owner().call(); // to test, bet 0.05 eth\n      //this.lotteryContract.methods.betAndDistribute('0xcd').send({from: this.account, value:5000000000000000, gas: 300000})\n    };\n\n    this.getPot = async () => {\n      let pot = await this.lotteryContract.methods.getPot().call();\n      let potString = web3.utils.fromWei(pot.toString(), 'ether');\n      this.setState({\n        pot: potString\n      });\n    };\n\n    this.getBetEvents = async () => {\n      const records = [];\n      let events = await this.lotteryContract.getPastEvents('BET', {\n        fromBlock: 0,\n        toBlock: 'latest'\n      });\n\n      for (let i = 0; i < events.length; i++) {\n        const record = {};\n        record.index = parseInt(events[i].returnValues.index, 10).toString();\n        record.bettor = events[i].returnValues.bettor;\n        record.betBlockNumber = events[i].blockNumber;\n        record.targetBlockNumber = events[i].returnValues.answerBlockNumber.toString();\n        record.challenges = events[i].returnValues.challenges;\n        record.win = \"Not Revealed\";\n        record.answer = '0x00';\n        records.unshift(record);\n      }\n\n      console.log(records);\n    };\n\n    this.bet = async () => {\n      let nonce = await web3.eth.getTransactionCount(this.account);\n      let challenges = '0x' + this.state.challenges[0].toLowerCase() + this.state.challenges[1].toLowerCase();\n      this.lotteryContract.methods.betAndDistribute(challenges).send({\n        from: this.account,\n        value: 5000000000000000,\n        gas: 300000,\n        nonce: nonce\n      }).on('transactionHash', hash => {\n        console.log(hash);\n      });\n    };\n\n    this.onClickCard = _Character => {\n      this.setState({\n        challenges: [this.state.challenges[1], _Character]\n      });\n    };\n\n    this.getCard = (_Character, _cardStyle) => {\n      let _card = '';\n\n      if (_Character === 'A') {\n        _card = '🂡';\n      }\n\n      if (_Character === 'B') {\n        _card = '🂱';\n      }\n\n      if (_Character === 'C') {\n        _card = '🃁';\n      }\n\n      if (_Character === 'D') {\n        _card = '🃑';\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: _cardStyle,\n        onClick: () => {\n          this.onClickCard(_Character);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text text-center\",\n            style: {\n              fontSize: 300\n            },\n            children: _card\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      betRecords: [],\n      winRecords: [],\n      failRecords: [],\n      pot: '0',\n      challenges: ['A', 'B'],\n      finalRecords: [{\n        bettor: '0xabcd',\n        index: '0',\n        challenges: 'ab',\n        answer: 'ab',\n        targetBlockAnswer: '10',\n        pot: '0'\n      }]\n    };\n  }\n\n  async componentDidMount() {\n    await this.initWeb3();\n    await this.pollData();\n    /*let account = await web3.eth.getAccounts();\n    console.log(account);\n    let balance = await web3.eth.getBalance(account[0]);\n    console.log(balance);*/\n    //let accounts = await this.web3.eth.getAccounts();\n    //console.log(accounts);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jumbotron\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Current Pot : \", this.state.pot]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Lottery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your Bet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [this.state.challenges[0], \" \", this.state.challenges[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-group\",\n          children: [this.getCard('A', 'card bg-primary'), this.getCard('B', 'card bg-warning'), this.getCard('C', 'card bg-danger'), this.getCard('D', 'card bg-success')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger btn-lg\",\n          onClick: this.bet,\n          children: \"BET!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-dark table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Index\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Challenges\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Pot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Answer Block Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.finalRecords.map((record, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: record.index\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/micka/Desktop/Crypto Project/lottery-react-app/src/App.js"],"names":["Web3","Component","web3","givenProvider","lotteryAddress","lotteryABI","App","constructor","props","pollData","getPot","getBetEvents","initWeb3","window","ethereum","enable","error","console","log","currentProvider","accounts","eth","getAccounts","account","lotteryContract","Contract","owner","methods","call","pot","potString","utils","fromWei","toString","setState","records","events","getPastEvents","fromBlock","toBlock","i","length","record","index","parseInt","returnValues","bettor","betBlockNumber","blockNumber","targetBlockNumber","answerBlockNumber","challenges","win","answer","unshift","bet","nonce","getTransactionCount","state","toLowerCase","betAndDistribute","send","from","value","gas","on","hash","onClickCard","_Character","getCard","_cardStyle","_card","fontSize","betRecords","winRecords","failRecords","finalRecords","targetBlockAnswer","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import './App.css';\nimport Web3 from 'web3';\nimport { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nvar web3 = new Web3(Web3.givenProvider || \"ws://localhost:7545\");\n\nlet lotteryAddress = '0x69bF039ED3c1Be51a491B77855245735faa7C365'\nlet lotteryABI =[ { \"inputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"bettor\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"answerBlockNumber\", \"type\": \"uint256\" } ], \"name\": \"BET\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"bettor\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"answer\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"answerBlockNumber\", \"type\": \"uint256\" } ], \"name\": \"DRAW\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"bettor\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"answer\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"answerBlockNumber\", \"type\": \"uint256\" } ], \"name\": \"FAIL\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"bettor\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"answerBlockNumber\", \"type\": \"uint256\" } ], \"name\": \"REFUND\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"bettor\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"answer\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"answerBlockNumber\", \"type\": \"uint256\" } ], \"name\": \"WIN\", \"type\": \"event\" }, { \"constant\": true, \"inputs\": [], \"name\": \"answerForTest\", \"outputs\": [ { \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"owner\", \"outputs\": [ { \"internalType\": \"address payable\", \"name\": \"\", \"type\": \"address\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" } ], \"name\": \"betAndDistribute\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"result\", \"type\": \"bool\" } ], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"getPot\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"pot\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" } ], \"name\": \"bet\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"result\", \"type\": \"bool\" } ], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [], \"name\": \"distribute\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"internalType\": \"bytes32\", \"name\": \"answer\", \"type\": \"bytes32\" } ], \"name\": \"setAnswerForTest\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"result\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" }, { \"internalType\": \"bytes32\", \"name\": \"answer\", \"type\": \"bytes32\" } ], \"name\": \"isMatch\", \"outputs\": [ { \"internalType\": \"enum Lottery.BettingResult\", \"name\": \"\", \"type\": \"uint8\" } ], \"payable\": false, \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"getBetInfo\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"answerBlockNumber\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"bettor\", \"type\": \"address\" }, { \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n\n    this.state={\n      betRecords:[],\n      winRecords:[],\n      failRecords:[],\n      pot:'0',\n      challenges:['A','B'],\n      finalRecords:[{\n        bettor:'0xabcd',\n        index:'0',\n        challenges:'ab',\n        answer:'ab',\n        targetBlockAnswer:'10',\n        pot:'0'\n      }]\n    }\n  }\n\n  async componentDidMount (){\n    await this.initWeb3();\n    \n    await this.pollData();\n    /*let account = await web3.eth.getAccounts();\n    console.log(account);\n    let balance = await web3.eth.getBalance(account[0]);\n    console.log(balance);*/\n    //let accounts = await this.web3.eth.getAccounts();\n    //console.log(accounts);\n  }\n  pollData = async ()=>{\n    await this.getPot();\n    await this.getBetEvents();\n  }\n  initWeb3 = async () =>{\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          // this.web3.eth.sendTransaction({/* ... */});\n      } catch (error) {\n          // User denied account access...\n          console.log(`User denied account access: ${error}`)\n      }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n        console.log('Legacy Mode')\n        window.web3 = new Web3(Web3.currentProvider);\n        // Acccounts always exposed\n        // this.web3.eth.sendTransaction({/* ... */});\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n    let accounts = await web3.eth.getAccounts();\n    this.account = accounts[0];\n    console.log(this.account);\n    this.lotteryContract = new web3.eth.Contract(lotteryABI,lotteryAddress);\n    let owner = await this.lotteryContract.methods.owner().call();\n    // to test, bet 0.05 eth\n    //this.lotteryContract.methods.betAndDistribute('0xcd').send({from: this.account, value:5000000000000000, gas: 300000})\n  }\n  getPot = async()=>{\n    let pot = await this.lotteryContract.methods.getPot().call()\n    let potString = web3.utils.fromWei(pot.toString(), 'ether');\n    this.setState({pot:potString})\n  }\n\n  getBetEvents = async()=>{\n    const records = [];\n    let events = await this.lotteryContract.getPastEvents('BET',{fromBlock:0, toBlock:'latest'});\n    for (let i=0; i<events.length;i++){\n      const record={}\n      record.index = parseInt(events[i].returnValues.index, 10).toString();\n      record.bettor = events[i].returnValues.bettor;\n      record.betBlockNumber = events[i].blockNumber;\n      record.targetBlockNumber = events[i].returnValues.answerBlockNumber.toString();\n      record.challenges=events[i].returnValues.challenges;\n      record.win = \"Not Revealed\";\n      record.answer = '0x00'\n      records.unshift(record);\n\n    }\n    console.log(records);\n  }\n  \n  bet = async()=>{\n    let nonce = await web3.eth.getTransactionCount(this.account);\n    let challenges = '0x'+this.state.challenges[0].toLowerCase()+this.state.challenges[1].toLowerCase();\n    this.lotteryContract.methods.betAndDistribute(challenges).send({from: this.account, value:5000000000000000, gas: 300000, nonce:nonce})\n    .on('transactionHash', (hash)=>{\n      console.log(hash)\n    })\n  }\n  onClickCard = (_Character)=>{\n    this.setState({\n      challenges:[this.state.challenges[1],_Character]\n    })\n  }\n  getCard = (_Character, _cardStyle)=>{\n    let _card = '';\n    if (_Character==='A'){\n      _card = '🂡'\n    }\n    if (_Character==='B'){\n      _card = '🂱'\n    }\n    if (_Character==='C'){\n      _card = '🃁'\n    }\n    if (_Character==='D'){\n      _card = '🃑'\n    }\n\n    return (\n      <button className={_cardStyle} onClick={()=>{\n        this.onClickCard(_Character)\n      }}> \n        <div className='card-body text-center'>\n            <p className='card-text'></p>\n            <p className='card-text text-center' style={{fontSize:300}}>{_card}</p>\n            <p className='card-text'></p>\n        </div>\n      </button>\n    )\n  }\n\n  render(){\n      return (\n        <div className=\"App\">\n          {/* Header - Pot, Betting characters */}\n          <div className=\"container\">\n            <div className=\"jumbotron\">\n              <h1>Current Pot : {this.state.pot}</h1>\n              <p>Lottery</p>\n              <p>Your Bet</p>\n              <p>{this.state.challenges[0]} {this.state.challenges[1]}</p>\n            </div>\n          </div>\n\n          <div className='container'>\n            <div className='card-group'>\n              {this.getCard('A','card bg-primary')}\n              {this.getCard('B','card bg-warning')}\n              {this.getCard('C','card bg-danger')}\n              {this.getCard('D','card bg-success')}\n            </div> \n          </div>\n          <br></br>\n          <div>\n            <button className='btn btn-danger btn-lg' onClick={this.bet}>BET!</button>\n          </div>\n          <br></br>\n          <div className='container'>\n            <table className='table table-dark table-striped'>\n              <thead>\n                <tr>\n                  <th>Index</th>\n                  <th>Address</th>\n                  <th>Challenges</th>\n                  <th>Answer</th>\n                  <th>Pot</th>\n                  <th>Status</th>\n                  <th>Answer Block Number</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  this.state.finalRecords.map((record, index) => {\n                    return (\n                      <tr key={index}>\n                        <td>{record.index}</td>\n                        <td></td> \n                        <td>0</td>      \n                        <td>0</td>      \n                        <td>0</td>      \n                        <td>0</td>      \n                        <td>0</td>           \n                      </tr>\n                    )\n                  })\n                }\n              </tbody>\n            </table>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}