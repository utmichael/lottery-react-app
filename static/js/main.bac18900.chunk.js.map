{"version":3,"sources":["App.js","index.js"],"names":["web3","Web3","givenProvider","lotteryABI","App","props","pollData","a","getPot","getBetEvents","initWeb3","window","ethereum","enable","console","log","currentProvider","eth","getAccounts","accounts","account","lotteryContract","Contract","methods","owner","call","pot","potString","utils","fromWei","toString","setState","records","getPastEvents","fromBlock","toBlock","events","i","length","record","index","parseInt","returnValues","bettor","betBlockNumber","blockNumber","targetBlockNumber","answerBlockNumber","challenges","win","answer","unshift","bet","getTransactionCount","nonce","state","toLowerCase","betAndDistribute","send","from","value","gas","on","hash","onClickCard","_Character","getCard","_cardStyle","_card","className","onClick","style","fontSize","betRecords","winRecords","failRecords","finalRecords","targetBlockAnswer","this","map","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bac18900.chunk.js","sourcesContent":["import './App.css';\nimport Web3 from 'web3';\nimport { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nvar web3 = new Web3(Web3.givenProvider || \"ws://localhost:7545\");\n\nlet lotteryAddress = '0x69bF039ED3c1Be51a491B77855245735faa7C365'\nlet lotteryABI =[ { \"inputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"bettor\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"answerBlockNumber\", \"type\": \"uint256\" } ], \"name\": \"BET\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"bettor\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"answer\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"answerBlockNumber\", \"type\": \"uint256\" } ], \"name\": \"DRAW\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"bettor\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"answer\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"answerBlockNumber\", \"type\": \"uint256\" } ], \"name\": \"FAIL\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"bettor\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"answerBlockNumber\", \"type\": \"uint256\" } ], \"name\": \"REFUND\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"bettor\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"bytes1\", \"name\": \"answer\", \"type\": \"bytes1\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"answerBlockNumber\", \"type\": \"uint256\" } ], \"name\": \"WIN\", \"type\": \"event\" }, { \"constant\": true, \"inputs\": [], \"name\": \"answerForTest\", \"outputs\": [ { \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"owner\", \"outputs\": [ { \"internalType\": \"address payable\", \"name\": \"\", \"type\": \"address\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" } ], \"name\": \"betAndDistribute\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"result\", \"type\": \"bool\" } ], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"getPot\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"pot\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" } ], \"name\": \"bet\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"result\", \"type\": \"bool\" } ], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [], \"name\": \"distribute\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"internalType\": \"bytes32\", \"name\": \"answer\", \"type\": \"bytes32\" } ], \"name\": \"setAnswerForTest\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"result\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" }, { \"internalType\": \"bytes32\", \"name\": \"answer\", \"type\": \"bytes32\" } ], \"name\": \"isMatch\", \"outputs\": [ { \"internalType\": \"enum Lottery.BettingResult\", \"name\": \"\", \"type\": \"uint8\" } ], \"payable\": false, \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"getBetInfo\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"answerBlockNumber\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"bettor\", \"type\": \"address\" }, { \"internalType\": \"bytes1\", \"name\": \"challenges\", \"type\": \"bytes1\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n\n    this.state={\n      betRecords:[],\n      winRecords:[],\n      failRecords:[],\n      pot:'0',\n      challenges:['A','B'],\n      finalRecords:[{\n        bettor:'0xabcd',\n        index:'0',\n        challenges:'ab',\n        answer:'ab',\n        targetBlockAnswer:'10',\n        pot:'0'\n      }]\n    }\n  }\n\n  async componentDidMount (){\n    await this.initWeb3();\n    \n    await this.pollData();\n    /*let account = await web3.eth.getAccounts();\n    console.log(account);\n    let balance = await web3.eth.getBalance(account[0]);\n    console.log(balance);*/\n    //let accounts = await this.web3.eth.getAccounts();\n    //console.log(accounts);\n  }\n  pollData = async ()=>{\n    await this.getPot();\n    await this.getBetEvents();\n  }\n  initWeb3 = async () =>{\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          // this.web3.eth.sendTransaction({/* ... */});\n      } catch (error) {\n          // User denied account access...\n          console.log(`User denied account access: ${error}`)\n      }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n        console.log('Legacy Mode')\n        window.web3 = new Web3(Web3.currentProvider);\n        // Acccounts always exposed\n        // this.web3.eth.sendTransaction({/* ... */});\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n    let accounts = await web3.eth.getAccounts();\n    this.account = accounts[0];\n    console.log(this.account);\n    this.lotteryContract = new web3.eth.Contract(lotteryABI,lotteryAddress);\n    let owner = await this.lotteryContract.methods.owner().call();\n    // to test, bet 0.05 eth\n    //this.lotteryContract.methods.betAndDistribute('0xcd').send({from: this.account, value:5000000000000000, gas: 300000})\n  }\n  getPot = async()=>{\n    let pot = await this.lotteryContract.methods.getPot().call()\n    let potString = web3.utils.fromWei(pot.toString(), 'ether');\n    this.setState({pot:potString})\n  }\n\n  getBetEvents = async()=>{\n    const records = [];\n    let events = await this.lotteryContract.getPastEvents('BET',{fromBlock:0, toBlock:'latest'});\n    for (let i=0; i<events.length;i++){\n      const record={}\n      record.index = parseInt(events[i].returnValues.index, 10).toString();\n      record.bettor = events[i].returnValues.bettor;\n      record.betBlockNumber = events[i].blockNumber;\n      record.targetBlockNumber = events[i].returnValues.answerBlockNumber.toString();\n      record.challenges=events[i].returnValues.challenges;\n      record.win = \"Not Revealed\";\n      record.answer = '0x00'\n      records.unshift(record);\n\n    }\n    console.log(records);\n  }\n  \n  bet = async()=>{\n    let nonce = await web3.eth.getTransactionCount(this.account);\n    let challenges = '0x'+this.state.challenges[0].toLowerCase()+this.state.challenges[1].toLowerCase();\n    this.lotteryContract.methods.betAndDistribute(challenges).send({from: this.account, value:5000000000000000, gas: 300000, nonce:nonce})\n    .on('transactionHash', (hash)=>{\n      console.log(hash)\n    })\n  }\n  onClickCard = (_Character)=>{\n    this.setState({\n      challenges:[this.state.challenges[1],_Character]\n    })\n  }\n  getCard = (_Character, _cardStyle)=>{\n    let _card = '';\n    if (_Character==='A'){\n      _card = '🂡'\n    }\n    if (_Character==='B'){\n      _card = '🂱'\n    }\n    if (_Character==='C'){\n      _card = '🃁'\n    }\n    if (_Character==='D'){\n      _card = '🃑'\n    }\n\n    return (\n      <button className={_cardStyle} onClick={()=>{\n        this.onClickCard(_Character)\n      }}> \n        <div className='card-body text-center'>\n            <p className='card-test'></p>\n            <p className='card-test text-center' style={{fontSize:300}}>{_card}</p>\n            <p className='card-test'></p>\n        </div>\n      </button>\n    )\n  }\n\n  render(){\n      return (\n        <div className=\"App\">\n          {/* Header - Pot, Betting characters */}\n          <div className=\"container\">\n            <div className=\"jumbotron\">\n              <h1>Current Pot : {this.state.pot}</h1>\n              <p>Lottery</p>\n              <p>Your Bet</p>\n              <p>{this.state.challenges[0]} {this.state.challenges[1]}</p>\n            </div>\n          </div>\n\n          <div className='container'>\n            <div className='card-group'>\n              {this.getCard('A','card bg-primary')}\n              {this.getCard('B','card bg-warning')}\n              {this.getCard('C','card bg-danger')}\n              {this.getCard('D','card bg-success')}\n            </div> \n          </div>\n          <br></br>\n          <div>\n            <button className='btn btn-danger btn-lg' onClick={this.bet}>BET!</button>\n          </div>\n          <br></br>\n          <div className='container'>\n            <table className='table table-dark table-striped'>\n              <thead>\n                <tr>\n                  <th>Index</th>\n                  <th>Address</th>\n                  <th>Challenges</th>\n                  <th>Answer</th>\n                  <th>Pot</th>\n                  <th>Status</th>\n                  <th>Answer Block Number</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  this.state.finalRecords.map((record, index) => {\n                    return (\n                      <tr key={index}>\n                        <td>0</td>\n                        <td>0</td> \n                        <td>0</td>      \n                        <td>0</td>      \n                        <td>0</td>      \n                        <td>0</td>      \n                        <td>0</td>           \n                      </tr>\n                    )\n                  })\n                }\n              </tbody>\n            </table>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}